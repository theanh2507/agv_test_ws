cmake_minimum_required(VERSION 3.8)
project(agv_test_pkg)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(urdf_tutorial REQUIRED)


install(
  DIRECTORY launch config rviz
  DESTINATION share/${PROJECT_NAME}
)

install(PROGRAMS
    scripts/lidar.py
    scripts/odom_tf_pub.py
    scripts/caculate_position.py
    scripts/cmd_vel_mux.py
    scripts/multiple_point.py
    scripts/waypoint.py
    DESTINATION lib/${PROJECT_NAME}
)

install(
  DIRECTORY description/meshes description/urdf
  DESTINATION share/${PROJECT_NAME}/description
)


# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  # add file 2
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
